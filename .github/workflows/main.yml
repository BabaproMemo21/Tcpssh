name: Localtonet SSH

on:
  workflow_dispatch:
    inputs:
      AUTH_TOKEN:
        description: 'Localtonet Auth Token'
        required: true
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: SSH anahtarları oluşturuluyor
        run: |
          ssh-keygen -t rsa -b 4096 -N "" -f ~/.ssh/id_rsa
          echo "SSH Public Key:"
          cat ~/.ssh/id_rsa.pub

      - name: SSH erişimi etkinleştiriliyor
        run: |
          mkdir -p ~/.ssh
          cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
          chmod 600 ~/.ssh/authorized_keys
          sudo systemctl enable ssh
          sudo systemctl start ssh
          echo "SSH servisi başlatıldı."

      - name: Localtonet indiriliyor ve çalıştırılıyor
        run: |
          wget https://localtonet.com/download/localtonet-linux-x64.zip
          unzip localtonet-linux-x64.zip
          chmod +x localtonet
          nohup ./localtonet tcp --token ${{ github.event.inputs.AUTH_TOKEN }} --port 22 > tunnel.log 2>&1 &

      - name: Localtonet bağlantısı bekleniyor
        run: |
          echo "Localtonet tünel bağlantısı açılıyor..."
          sleep 10
          echo "::group::Tünel Log"
          cat tunnel.log
          echo "::endgroup::"

      - name: SSH Bağlantı Komutu Oluşturuluyor
        run: |
          echo "Kendi sisteminizden aşağıdaki komutla bağlanabilirsiniz:"
          grep -oP 'tcp://[^ ]+' tunnel.log | head -n 1 | sed 's/tcp/ssh/' | sed 's/$/ -p 22/' | sed 's/^/ssh -o StrictHostKeyChecking=no root@/' > ssh_command.txt
          echo "::group::SSH Komutu"
          cat ssh_command.txt
          echo "::endgroup::"

      - name: SSH Private Key Yazdırılıyor
        run: |
          echo "::group::SSH Private Key"
          cat ~/.ssh/id_rsa
          echo "::endgroup::"
